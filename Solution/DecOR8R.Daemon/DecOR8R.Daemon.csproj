<Project Sdk="Microsoft.NET.Sdk.Worker">

    <PropertyGroup>
        <TargetFramework>net6.0</TargetFramework>
        <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
        <IsWindows Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' == 'true'">true</IsWindows>
        <IsOSX Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">true</IsOSX>
        <IsLinux Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">true</IsLinux>
    </PropertyGroup>

    <PropertyGroup Condition="'$(IsWindows)'=='true'">
        <DefineConstants>Windows</DefineConstants>
    </PropertyGroup>

    <PropertyGroup Condition="'$(IsOSX)'=='true'">
        <DefineConstants>OSX</DefineConstants>
    </PropertyGroup>

    <PropertyGroup Condition="'$(IsLinux)'=='true'">
        <DefineConstants>Linux</DefineConstants>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.Extensions.Configuration" Version="6.0.0" />
        <PackageReference Include="Microsoft.Extensions.Hosting" Version="6.0.0" />
        <PackageReference Include="Microsoft.Extensions.Hosting.Systemd" Version="6.0.0" />
        <PackageReference Include="Microsoft.Extensions.Hosting.WindowsServices" Version="6.0.0" />
        <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.11.1" />
        <PackageReference Include="System.CommandLine.Rendering" Version="0.3.0-alpha.21216.1" />
    </ItemGroup>
</Project>
